===========================
Lovely PyRest Documentation
===========================

Lovely Pyrest is an extension for
`Pyramid <http://www.pylonsproject.org/projects/pyramid/about>`_ to easily create
REST-Services. It provides functionallity to define service endpoints by
decorating classes and methods.

Features
========

    - Sphinx extension to automatically generate documentation
    - It's possible to get help information of every endpoint
    - Automatic schema-validation based on `jsonschema <http://json-schema.org/>`_


Index
=====

.. toctree::
   :maxdepth: 2
   :titlesonly:

   setup.txt
   service.txt
   validation.txt
   sphinx.txt

First Example
=============

This is an example of a full WSGI application using `lovely.pyrest`:

.. literalinclude:: examples/first_example.py

.. doctest::
    :hide:

    >>> app = get_app('testing.examples.first_example')

The example provides the following functionallity:

Schema Validation
-----------------

The request body gets validated if a post request gets performed and a json
error message gets returned if validation fails::

    >>> res = app.post_json('/article', {'content': 'This is my...'}, expect_errors=True)

    >>> print res.status
    400 Bad Request

    >>> print_json(res.body)
    {
        "reason": "Required field 'title' is missing",
        "status": "ERROR"
    }
