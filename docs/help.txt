.. Shared Source Software
   Copyright (c) 2013, Lovely Systems GmbH

====
Help
====

By default every API endpoint is able to show a help message by adding
`help` as query parameter to a request.
The help message contains the defined `schema` to indicate which query
parameters can (or must) be set to a request.

If the API endpoint does not accept any query parameters the help message is
as follows:

    `{'help': 'This API endpoint does not accept any specific query parameters'}`

The help feature is enabled by default, so you just have to create a service:

.. doctest::
    :hide:

    >>> from lovely.pyrest.views import DEFAULT_HELP_MESSAGE
    >>> print DEFAULT_HELP_MESSAGE
    {'help': 'This API endpoint does not accept any specific query parameters'}

.. literalinclude:: examples/help_example.py

.. doctest::
    :hide:

    >>> app = get_app('testing.examples.help_example')

The service returns the schema as help information::

    >>> print app.get('/svc?help')
    Response: 200 OK
    Content-Type: application/json; charset=UTF-8
    {"query": {"type": "object", "properties": {"id": {"required": false, "type": "string"}}}}

As stated above the help feature is enabled by default.
To disable the help feature for a specific view simply set the
`help` to `False`:

.. literalinclude:: examples/help_turned_off_example.py

.. doctest::
    :hide:

    >>> app = get_app('testing.examples.help_turned_off_example')
    >>> response = app.get('/svc?help')
    >>> response.status
    '200 OK'
    >>> response.body
    '{"title": "Hello World!"}'


